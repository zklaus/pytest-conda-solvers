[build-system]
build-backend = "hatchling.build"
requires = [
  "hatchling >=1.12.2",
  "hatch-vcs >=0.2.0",
]

[project]
authors = [
  {name = "conda contributors"},
]
classifiers = [
  "Framework :: Pytest",
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Topic :: Software Development :: Testing",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "License :: OSI Approved :: BSD License",
]
dependencies = [
  "conda",
  "pytest>=6.2.0",
  "importlib_resources>=5.10; python_version<'3.12'",
]
description = "A pytest plugin to run conda solver tests"
dynamic = ["version"]
license = {file = "LICENSE"}
maintainers = [
  {name = "conda contributors"},
]
name = "pytest-conda-solvers"
readme = "README.md"
requires-python = ">=3.8"

[project.entry-points.pytest11]
conda-solvers = "pytest_conda_solvers.plugin"

[project.urls]
Repository = "https://github.com/zklaus/pytest-conda-solvers"

[tool.coverage.report]
exclude_lines = [
  "if TYPE_CHECKING:",  # ignoring type checking imports
]
show_missing = true
skip_covered = true
sort = "Miss"

[tool.coverage.run]
# store relative paths in coverage information
relative_files = true

[tool.hatch.build]
include = ["pytest_conda_solvers"]

[tool.hatch.build.hooks.vcs]
version-file = "pytest_conda_solvers/_version.py"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "dirty-tag"

[tool.pytest.ini_options]
addopts = [
  "--color=yes",
  "--cov-append",
  "--cov-branch",
  "--cov-report=term",  # print summary table to screen
  "--cov-report=xml",  # for codecov/codecov-action upload
  "--durations=16",
  "--junitxml=test-report.xml",
  "--store-durations",
  "--strict-markers",
  "--tb=native",
  "--xdoctest-modules",
  "--xdoctest-style=google",
  "-vv",
]
doctest_optionflags = [
  "NORMALIZE_WHITESPACE",
  "IGNORE_EXCEPTION_DETAIL",
  "ALLOW_UNICODE",
  "ELLIPSIS",
]
minversion = 3.0
testpaths = ["tests"]
